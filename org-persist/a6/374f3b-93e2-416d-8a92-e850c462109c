(((elisp org-element--headline-cache) . #s(avl-tree- [[[[[[[nil nil #3=(headline (:raw-value #1="Literal config" :begin 1 :end 27545 :pre-blank 1 :contents-begin 19 :contents-end 27545 :robust-begin 21 :robust-end 27543 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1 :title #1# :parent #64=(org-data (:begin 1 :contents-begin 1 :contents-end 27545 :end 27545 :robust-begin 3 :robust-end 27543 :post-blank 0 :post-affiliated 1 :path "c:/Users/jacek/AppData/Roaming/.emacs.d/literal-config.org" :mode org-data :CATEGORY "literal-config" :cached t :org-element--cache-sync-key nil)) :cached t :org-element--cache-sync-key nil :granularity element)) 0] nil #65=(headline (:raw-value #2="Emergency use, fix nasty emacs bug" :begin 229 :end 470 :pre-blank 0 :contents-begin 267 :contents-end 469 :robust-begin 269 :robust-end 467 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 229 :title #2# :parent #3# :cached t :granularity element :org-element--cache-sync-key nil)) -1] [[nil nil #6=(headline (:raw-value #4="Functions" :begin 753 :end 1179 :pre-blank 0 :contents-begin 766 :contents-end 1178 :robust-begin 768 :robust-end 1176 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 753 :title #4# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil nil #70=(headline (:raw-value #5="Cleanup 80" :begin 881 :end 1179 :pre-blank 1 :contents-begin 897 :contents-end 1178 :robust-begin 899 :robust-end 1176 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 881 :title #5# :mode nil :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] #69=(headline (:raw-value #7="graph arrow" :begin 766 :end 881 :pre-blank 0 :contents-begin 782 :contents-end 881 :robust-begin 784 :robust-end 879 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 766 :title #7# :mode section :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] #67=(headline (:raw-value #8="beginning" :begin 470 :end 753 :pre-blank 0 :contents-begin 483 :contents-end 752 :robust-begin 485 :robust-end 750 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 470 :title #8# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [[[nil nil #72=(headline (:raw-value #9="init stuff melpa packages" :begin 1190 :end 4360 :pre-blank 0 :contents-begin 1220 :contents-end 4359 :robust-begin 1222 :robust-end 4357 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1190 :title #9# :mode section :granularity element :cached t :parent #13=(headline (:raw-value #10="Config" :begin 1179 :end 27175 :pre-blank 1 :contents-begin 1190 :contents-end 27173 :robust-begin 1192 :robust-end 27171 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1179 :title #10# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #73=(headline (:raw-value #11="core" :begin 4437 :end 4654 :pre-blank 0 :contents-begin 4447 :contents-end 4653 :robust-begin 4449 :robust-end 4651 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 4437 :title #11# :mode nil :granularity element :cached t :parent #14=(headline (:raw-value #12="Define folders" :begin 4360 :end 5513 :pre-blank 0 :contents-begin 4379 :contents-end 5512 :robust-begin 4381 :robust-end 5510 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 4360 :title #12# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #14# 0] [[nil nil #78=(headline (:raw-value #15="vendor" :begin 4905 :end 5184 :pre-blank 0 :contents-begin 4917 :contents-end 5183 :robust-begin 4919 :robust-end 5181 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 4905 :title #15# :mode nil :granularity element :cached t :parent #14# :org-element--cache-sync-key nil)) 0] [nil nil #82=(headline (:raw-value #16="Bind key" :begin 5513 :end 5737 :pre-blank 1 :contents-begin 5527 :contents-end 5736 :robust-begin 5529 :robust-end 5734 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 5513 :title #16# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] #79=(headline (:raw-value #17="savefile" :begin 5184 :end 5426 :pre-blank 0 :contents-begin 5198 :contents-end 5425 :robust-begin 5200 :robust-end 5423 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 5184 :title #17# :mode nil :granularity element :cached t :parent #14# :org-element--cache-sync-key nil)) 0] #74=(headline (:raw-value #18="modules" :begin 4654 :end 4905 :pre-blank 0 :contents-begin 4667 :contents-end 4905 :robust-begin 4669 :robust-end 4903 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 4654 :title #18# :mode nil :granularity element :cached t :parent #14# :org-element--cache-sync-key nil)) 0] #13# 0] [[[[nil nil #86=(headline (:raw-value #19="Ace window" :begin 6265 :end 6723 :pre-blank 0 :contents-begin 6280 :contents-end 6722 :robust-begin 6282 :robust-end 6720 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 6265 :title #19# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [nil nil #89=(headline (:raw-value #20="y-or-n-p" :begin 6878 :end 6969 :pre-blank 0 :contents-begin 6891 :contents-end 6968 :robust-begin 6893 :robust-end 6966 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 6878 :title #20# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] #87=(headline (:raw-value #21="Helm descbinds" :begin 6723 :end 6878 :pre-blank 0 :contents-begin 6742 :contents-end 6877 :robust-begin 6744 :robust-end 6875 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 6723 :title #21# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [[nil nil #24=(headline (:raw-value #22="More settings from prelude init" :begin 7427 :end 9028 :pre-blank 1 :contents-begin 7464 :contents-end 9027 :robust-begin 7466 :robust-end 9025 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7427 :title #22# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [nil nil #97=(headline (:raw-value #23="Location of customize settings" :begin 7635 :end 7935 :pre-blank 0 :contents-begin 7671 :contents-end 7934 :robust-begin 7673 :robust-end 7932 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7635 :title #23# :mode nil :granularity element :cached t :parent #24# :org-element--cache-sync-key nil)) 0] #93=(headline (:raw-value #25="Big file warning" :begin 7464 :end 7635 :pre-blank 0 :contents-begin 7486 :contents-end 7634 :robust-begin 7488 :robust-end 7632 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7464 :title #25# :mode section :granularity element :cached t :parent #24# :org-element--cache-sync-key nil)) 0] #91=(headline (:raw-value #26="some shortcuts" :begin 6969 :end 7427 :pre-blank 0 :contents-begin 6988 :contents-end 7426 :robust-begin 6990 :robust-end 7424 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 6969 :title #26# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [[[nil nil #100=(headline (:raw-value #27="Backup, autosave and other editor settings" :begin 8093 :end 9028 :pre-blank 1 :contents-begin 8142 :contents-end 9027 :robust-begin 8144 :robust-end 9025 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 8093 :title #27# :mode nil :granularity element :cached t :parent #24# :org-element--cache-sync-key nil)) 0] [nil nil #104=(headline (:raw-value #28="Window title" :begin 9290 :end 9726 :pre-blank 0 :contents-begin 9307 :contents-end 9724 :robust-begin 9309 :robust-end 9722 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 9290 :title #28# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] #102=(headline (:raw-value #29="Emacs server" :begin 9028 :end 9290 :pre-blank 1 :contents-begin 9046 :contents-end 9289 :robust-begin 9048 :robust-end 9287 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 9028 :title #29# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [[nil nil #109=(headline (:raw-value #30="Turn off tool bar" :begin 10051 :end 10132 :pre-blank 0 :contents-begin 10073 :contents-end 10131 :robust-begin 10075 :robust-end 10129 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10051 :title #30# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [nil nil #111=(headline (:raw-value #31="Ivy" :begin 10157 :end 10611 :pre-blank 0 :contents-begin 10166 :contents-end 10609 :robust-begin 10168 :robust-end 10607 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10157 :title #31# :mode section :granularity element :cached t :parent #33=(headline (:raw-value #32="Autocompletion - ivy" :begin 10132 :end 11535 :pre-blank 0 :contents-begin 10157 :contents-end 11534 :robust-begin 10159 :robust-end 11532 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10132 :title #32# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #33# 0] #107=(headline (:raw-value #34="Which key" :begin 9726 :end 10051 :pre-blank 0 :contents-begin 9740 :contents-end 10050 :robust-begin 9742 :robust-end 10048 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 9726 :title #34# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] #98=(headline (:raw-value #35="Inhibit showing of splash screen" :begin 7935 :end 8093 :pre-blank 0 :contents-begin 7973 :contents-end 8092 :robust-begin 7975 :robust-end 8090 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7935 :title #35# :mode nil :granularity element :cached t :parent #24# :org-element--cache-sync-key nil)) 0] #84=(headline (:raw-value #36="Recent files" :begin 5737 :end 6265 :pre-blank 1 :contents-begin 5755 :contents-end 6264 :robust-begin 5757 :robust-end 6262 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 5737 :title #36# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [[[[nil nil #115=(headline (:raw-value #37="Counsel" :begin 10739 :end 11535 :pre-blank 0 :contents-begin 10752 :contents-end 11534 :robust-begin 10754 :robust-end 11532 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10739 :title #37# :mode nil :granularity element :cached t :parent #33# :org-element--cache-sync-key nil)) 0] [nil nil #118=(headline (:raw-value #38="Autocompletion - ido" :begin 11764 :end 12768 :pre-blank 0 :contents-begin 11797 :contents-end 12767 :robust-begin 11799 :robust-end 12765 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp 11775 :post-affiliated 11764 :title #38# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] #116=(headline (:raw-value #39="smex" :begin 11535 :end 11764 :pre-blank 0 :contents-begin 11544 :contents-end 11763 :robust-begin 11546 :robust-end 11761 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11535 :title #39# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [[nil nil #123=(headline (:raw-value #40="Origami" :begin 13325 :end 14328 :pre-blank 1 :contents-begin 13338 :contents-end 14327 :robust-begin 13340 :robust-end 14325 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 13325 :title #40# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [nil nil #45=(headline (:raw-value #41="Org mode configuration" :begin 14810 :end 17451 :pre-blank 1 :contents-begin 14838 :contents-end 17450 :robust-begin 14840 :robust-end 17448 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14810 :title #41# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] #124=(headline (:raw-value #42="Add mode flashing in overwrite" :begin 14328 :end 14810 :pre-blank 0 :contents-begin 14363 :contents-end 14806 :robust-begin 14365 :robust-end 14804 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 4 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14328 :title #42# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] #121=(headline (:raw-value #43="Company" :begin 12768 :end 13325 :pre-blank 0 :contents-begin 12780 :contents-end 13324 :robust-begin 12782 :robust-end 13322 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 12768 :title #43# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [[[[nil nil #129=(headline (:raw-value #44="pdf link to page index" :begin 15869 :end 16402 :pre-blank 1 :contents-begin 15898 :contents-end 16399 :robust-begin 15900 :robust-end 16397 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15869 :title #44# :mode nil :granularity element :cached t :parent #45# :org-element--cache-sync-key nil)) 0] [nil nil #132=(headline (:raw-value #46="Idris" :begin 17451 :end 17614 :pre-blank 2 :contents-begin 17463 :contents-end 17613 :robust-begin 17465 :robust-end 17611 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 17451 :title #46# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] #130=(headline (:raw-value #47="link to a file and line" :begin 16402 :end 17451 :pre-blank 0 :contents-begin 16431 :contents-end 17450 :robust-begin 16433 :robust-end 17448 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 16402 :title #47# :mode nil :granularity element :cached t :parent #45# :org-element--cache-sync-key nil)) 0] [[nil nil #51=(headline (:raw-value #48="Lisp" :begin 17827 :end 22869 :pre-blank 0 :contents-begin 17836 :contents-end 22868 :robust-begin 17838 :robust-end 22866 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 17827 :title #48# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [nil nil #135=(headline (:raw-value #49="jacek-verse" :begin 17964 :end 18164 :pre-blank 0 :contents-begin 17982 :contents-end 18163 :robust-begin 17984 :robust-end 18161 :level 5 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 17964 :title #49# :mode nil :granularity element :cached t :parent #52=(headline (:raw-value #50="Emasc Lisp" :begin 17907 :end 18164 :pre-blank 0 :contents-begin 17923 :contents-end 18163 :robust-begin 17925 :robust-end 18161 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 17907 :title #50# :mode nil :granularity element :cached t :parent #51# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #52# 0] #134=(headline (:raw-value #53="Elm" :begin 17614 :end 17827 :pre-blank 0 :contents-begin 17622 :contents-end 17827 :robust-begin 17624 :robust-end 17825 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 17614 :title #53# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [[[nil nil #140=(headline (:raw-value #54="Sly" :begin 18558 :end 18736 :pre-blank 0 :contents-begin 18567 :contents-end 18735 :robust-begin 18569 :robust-end 18733 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 18558 :title #54# :mode nil :granularity element :cached t :parent #51# :org-element--cache-sync-key nil)) 0] [nil nil #144=(headline (:raw-value #55="Paredit" :begin 21251 :end 22399 :pre-blank 0 :contents-begin 21264 :contents-end 22398 :robust-begin 21266 :robust-end 22396 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 21251 :title #55# :mode nil :granularity element :cached t :parent #51# :org-element--cache-sync-key nil)) 0] #142=(headline (:raw-value #56="Slime" :begin 18736 :end 21251 :pre-blank 0 :contents-begin 18747 :contents-end 21250 :robust-begin 18749 :robust-end 21248 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 18736 :title #56# :mode nil :granularity element :cached t :parent #51# :org-element--cache-sync-key nil)) 0] [[nil nil #147=(headline (:raw-value #57="Parentheses coloring" :begin 22869 :end 27175 :pre-blank 1 :contents-begin 22895 :contents-end 27173 :robust-begin 22897 :robust-end 27171 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 22869 :title #57# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [nil nil #150=(headline (:raw-value #58="The end" :begin 27350 :end 27545 :pre-blank 0 :contents-begin 27361 :contents-end 27545 :robust-begin 27363 :robust-end 27543 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 27350 :title #58# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #149=(headline (:raw-value #59="tip of the day" :begin 27175 :end 27350 :pre-blank 1 :contents-begin 27194 :contents-end 27349 :robust-begin 27196 :robust-end 27347 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 27175 :title #59# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #146=(headline (:raw-value #60="The rest" :begin 22399 :end 22869 :pre-blank 0 :contents-begin 22413 :contents-end 22868 :robust-begin 22415 :robust-end 22866 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 22399 :title #60# :mode nil :granularity element :cached t :parent #51# :org-element--cache-sync-key nil)) 0] #138=(headline (:raw-value #61="Clojure" :begin 18164 :end 18558 :pre-blank 0 :contents-begin 18177 :contents-end 18556 :robust-begin 18179 :robust-end 18554 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 18164 :title #61# :mode nil :granularity element :cached t :parent #51# :org-element--cache-sync-key nil)) 0] #127=(headline (:raw-value #62="org-roam" :begin 14918 :end 15869 :pre-blank 0 :contents-begin 14932 :contents-end 15868 :robust-begin 14934 :robust-end 15866 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14918 :title #62# :mode nil :granularity element :cached t :parent #45# :org-element--cache-sync-key nil)) 1] #113=(headline (:raw-value #63="Swiper" :begin 10611 :end 10739 :pre-blank 0 :contents-begin 10623 :contents-end 10738 :robust-begin 10625 :robust-end 10736 :level 4 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10611 :title #63# :mode nil :granularity element :cached t :parent #33# :org-element--cache-sync-key nil)) 0] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[[[[nil nil #64# 0] [nil nil (section (:begin 19 :end 229 :contents-begin 19 :contents-end 228 :robust-begin 19 :robust-end 226 :post-blank 1 :post-affiliated 19 :mode section :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #3# 0] [[nil nil #66=(section (:begin 267 :end 470 :contents-begin 267 :contents-end 469 :robust-begin 267 :robust-end 467 :post-blank 1 :post-affiliated 267 :mode section :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 399 :end 470 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (setq package-check-signature nil)\12" :post-blank 1 :post-affiliated 399 :mode nil :granularity element :cached t :parent #66# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 267 :end 399 :contents-begin 267 :contents-end 398 :post-blank 1 :post-affiliated 267 :mode planning :granularity element :cached t :parent #66# :org-element--cache-sync-key nil)) 0] #65# 0] [[[nil nil #68=(section (:begin 483 :end 753 :contents-begin 483 :contents-end 752 :robust-begin 483 :robust-end 750 :post-blank 1 :post-affiliated 483 :mode section :granularity element :cached t :parent #67# :org-element--cache-sync-key nil)) 0] nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 483 :end 753 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "     (message \"\\nbeginning of literal config\")\12\12     ;; reduce the frequency of garbage collection by making it happen on\12     ;; each 50MB of allocated data (the default is on every 0.76MB)\12     (setq gc-cons-threshold 50000000)\12" :post-blank 1 :post-affiliated 483 :mode planning :granularity element :cached t :parent #68# :org-element--cache-sync-key nil)) -1] [[nil nil #69# 0] nil #77=(section (:begin 782 :end 881 :contents-begin 782 :contents-end 881 :robust-begin 782 :robust-end 879 :post-blank 0 :post-affiliated 782 :mode section :granularity element :cached t :parent #69# :org-element--cache-sync-key nil)) -1] #6# 0] #67# 0] [[[[nil nil #70# 0] nil #71=(section (:begin 897 :end 1179 :contents-begin 897 :contents-end 1178 :robust-begin 897 :robust-end 1176 :post-blank 1 :post-affiliated 897 :mode section :granularity element :cached t :parent #70# :org-element--cache-sync-key nil)) -1] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 920 :end 1179 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (defun cleanup-80 ()\12    (interactive)\12    (beginning-of-line)\12    (forward-char 80)\12    (forward-word)\12    (backward-word)\12\12    ;; insert new line char\12    (newline-and-indent))\12\12  (global-set-key (kbd \"s-8\") 'cleanup-80)\12" :post-blank 1 :post-affiliated 920 :mode nil :granularity element :cached t :parent #71# :org-element--cache-sync-key nil)) 0] [nil nil #72# 0] #13# 0] (paragraph (:begin 897 :end 920 :contents-begin 897 :contents-end 919 :post-blank 1 :post-affiliated 897 :mode planning :granularity element :cached t :parent #71# :org-element--cache-sync-key nil)) 0] [[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 1220 :end 4360 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      (require 'package)\12\12    ;; accessing a package repo over https on Windows is a no go, so we\12    ;; fallback to http there\12    (add-to-list 'package-archives '(\"melpa\" . \"http://melpa.org/packages/\") t)\12\12\12  ;; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`\12  ;; and `package-pinned-packages`. Most users will not need or want to do this.\12  ;;(add-to-list 'package-archives '(\"melpa-stable\" . \"https://stable.melpa.org/packages/\") t)\12\12  (package-initialize)\12  (message \"package archives used %s\" package-archives)\12\12  ;; set package-user-dir to be relative to init.el path\12  (setq package-user-dir (expand-file-name \"elpa\" init-dir))\12\12        (defun melpa-install-packages (packages)\12          \"Install all packages in packages list.\"\12          (let ((refreshed nil))\12            (mapc\12             (lambda (pkg)\12               (unless (package-installed-p pkg)\12                 (unless refreshed\12                   (message \"%s\" \"Emacs is refreshing Melpa packages...\")\12                   (package-refresh-contents)\12                   (setf refreshed t)\12                   (message \"%s\" \" done.\"))\12                 (package-install pkg)))\12             packages)))\12\12        ;; This is the list of packages to install. Remember, installing packages from\12        ;; melpa does not mean loading the into  Emacs.\12\12        (when t\12          ;; install packages in the following list\12          (melpa-install-packages '(ansi-color\12                                    anzu\12                                    avy\12                                    browse-kill-ring\12                                    color\12                                    counsel\12                                    crux\12                                    diff-hl\12                                    diminish\12                                    discover-my-major\12                                    ef-themes\12                                    eldoc\12                                    epl\12                                    expand-region\12                                    flx-ido\12                                    flycheck\12                                    helm-core\12                                    helm-descbinds\12                                    ido-completing-read+\12                                    imenu-anywhere\12                                    magit\12                                    paredit\12                                    rainbow-delimiters\12                                    slime\12                                    smartparens\12                                    smartrep\12                                    smex\12                                    super-save\12                                    swiper\12                                    undo-tree\12                                    volatile-highlights\12                                    ;; vterm-toggle\12                                    which-key\12                                    whitespace\12                                    yafolding\12                                    ))\12          )\12\12" :post-blank 1 :post-affiliated 1220 :mode planning :granularity element :cached t :parent #76=(section (:begin 1220 :end 4360 :contents-begin 1220 :contents-end 4359 :robust-begin 1220 :robust-end 4357 :post-blank 1 :post-affiliated 1220 :mode section :granularity element :cached t :parent #72# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil (section (:begin 4379 :end 4437 :contents-begin 4379 :contents-end 4436 :robust-begin 4379 :robust-end 4434 :post-blank 1 :post-affiliated 4379 :mode section :granularity element :cached t :parent #14# :org-element--cache-sync-key nil)) 0] #14# 0] [[nil nil #75=(section (:begin 4447 :end 4654 :contents-begin 4447 :contents-end 4653 :robust-begin 4447 :robust-end 4651 :post-blank 1 :post-affiliated 4447 :mode section :granularity element :cached t :parent #73# :org-element--cache-sync-key nil)) 0] [nil nil #74# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 4447 :end 4654 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "       (defvar experimental-core-dir (expand-file-name \"core\" init-dir)\12         \"The core functionality.\")\12\12       (add-to-list 'load-path experimental-core-dir)\12" :post-blank 1 :post-affiliated 4447 :mode planning :granularity element :cached t :parent #75# :org-element--cache-sync-key nil)) 0] #73# 0] #76# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 782 :end 881 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (defun insert-graph-arrow ()\12  (interactive)\12  (insert \" -> \"))\12" :post-blank 0 :post-affiliated 782 :mode planning :granularity element :cached t :parent #77# :org-element--cache-sync-key nil)) 0] [[[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 4667 :end 4905 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "       (defvar experimental-modules-dir (expand-file-name  \"modules\" init-dir)\12         \"This is the folder for Experimental modules.\")\12\12       (add-to-list 'load-path experimental-modules-dir )\12" :post-blank 0 :post-affiliated 4667 :mode planning :granularity element :cached t :parent #96=(section (:begin 4667 :end 4905 :contents-begin 4667 :contents-end 4905 :robust-begin 4667 :robust-end 4903 :post-blank 0 :post-affiliated 4667 :mode section :granularity element :cached t :parent #74# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #81=(section (:begin 4917 :end 5184 :contents-begin 4917 :contents-end 5183 :robust-begin 4917 :robust-end 5181 :post-blank 1 :post-affiliated 4917 :mode section :granularity element :cached t :parent #78# :org-element--cache-sync-key nil)) 0] #78# 0] [[nil nil #79# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 5198 :end 5426 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "       (defvar experimental-savefile-dir (expand-file-name \"savefile\" init-dir)\12         \"This directory NEEDS CORRECTION.\")\12\12       (add-to-list 'load-path experimental-savefile-dir)\12" :post-blank 1 :post-affiliated 5198 :mode planning :granularity element :cached t :parent #80=(section (:begin 5198 :end 5426 :contents-begin 5198 :contents-end 5425 :robust-begin 5198 :robust-end 5423 :post-blank 1 :post-affiliated 5198 :mode section :granularity element :cached t :parent #79# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #80# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 4917 :end 5184 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "       (defvar experimental-vendor-dir (expand-file-name \"vendor\" init-dir)\12         \"This directory houses packages that are not yet available in ELPA (or MELPA).\")\12\12       (add-to-list 'load-path experimental-vendor-dir)\12" :post-blank 1 :post-affiliated 4917 :mode planning :granularity element :cached t :parent #81# :org-element--cache-sync-key nil)) 0] [[[nil nil #83=(section (:begin 5527 :end 5737 :contents-begin 5527 :contents-end 5736 :robust-begin 5527 :robust-end 5734 :post-blank 1 :post-affiliated 5527 :mode section :granularity element :cached t :parent #82# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 5559 :end 5737 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      (use-package bind-key\12        :ensure t\12        :config\12        (add-to-list 'same-window-buffer-names \"*Personal Keybindings*\"))\12" :post-blank 1 :post-affiliated 5559 :mode nil :granularity element :cached t :parent #83# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 5527 :end 5559 :contents-begin 5527 :contents-end 5558 :post-blank 1 :post-affiliated 5527 :mode planning :granularity element :cached t :parent #83# :org-element--cache-sync-key nil)) 0] [[nil nil #85=(section (:begin 5755 :end 6265 :contents-begin 5755 :contents-end 6264 :robust-begin 5755 :robust-end 6262 :post-blank 1 :post-affiliated 5755 :mode section :granularity element :cached t :parent #84# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 5843 :end 6265 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      (use-package recentf\12        :init\12        (setq recentf-max-menu-items 20\12              recentf-auto-cleanup 'never\12              recentf-keep '(file-remote-p file-readable-p))\12        (recentf-mode 1)\12        (let ((last-ido \"~/.emacs.d/ido.last\"))\12          (when (file-exists-p last-ido)\12            (delete-file last-ido)))\12\12        :bind (\"s-r\" . recentf-open-files))\12" :post-blank 1 :post-affiliated 5843 :mode nil :granularity element :cached t :parent #85# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 5755 :end 5843 :contents-begin 5755 :contents-end 5842 :post-blank 1 :post-affiliated 5755 :mode planning :granularity element :cached t :parent #85# :org-element--cache-sync-key nil)) 0] #84# 0] #82# 0] [[[[nil nil #88=(section (:begin 6280 :end 6723 :contents-begin 6280 :contents-end 6722 :robust-begin 6280 :robust-end 6720 :post-blank 1 :post-affiliated 6280 :mode section :granularity element :cached t :parent #86# :org-element--cache-sync-key nil)) 0] [nil nil #87# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 6280 :end 6723 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "                  (use-package ace-window\12                    :ensure t\12                    :init\12                    (custom-set-faces\12                     '(aw-leading-char-face\12                       ((t (:inherit ace-jump-face-foreground\12                                     :height 3.0\12                                     :foreground \"red\")))))\12                    :bind (\"C-x o\" . ace-window))\12" :post-blank 1 :post-affiliated 6280 :mode planning :granularity element :cached t :parent #88# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 6742 :end 6878 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      (use-package helm-descbinds\12        :ensure t\12        :bind (\"C-h b\" . helm-descbinds))\12" :post-blank 1 :post-affiliated 6742 :mode planning :granularity element :cached t :parent #90=(section (:begin 6742 :end 6878 :contents-begin 6742 :contents-end 6877 :robust-begin 6742 :robust-end 6875 :post-blank 1 :post-affiliated 6742 :mode section :granularity element :cached t :parent #87# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #95=(section (:begin 6891 :end 6969 :contents-begin 6891 :contents-end 6968 :robust-begin 6891 :robust-end 6966 :post-blank 1 :post-affiliated 6891 :mode section :granularity element :cached t :parent #89# :org-element--cache-sync-key nil)) 0] #89# 0] #90# 0] [[[nil nil #91# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 6988 :end 7427 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12;; Font size\12(global-set-key (kbd \"C-+\") 'text-scale-increase)\12(global-set-key (kbd \"C--\") 'text-scale-decrease)\12\12;; Window switching. (C-x o goes to the next window)\12(global-set-key (kbd \"C-x O\") (lambda ()\12                                (interactive)\12                                (other-window -1))) ;; back one\12\12;; toggle menu-bar visibility\12(global-set-key (kbd \"<f12>\") 'menu-bar-mode)\12\12" :post-blank 1 :post-affiliated 6988 :mode planning :granularity element :cached t :parent #92=(section (:begin 6988 :end 7427 :contents-begin 6988 :contents-end 7426 :robust-begin 6988 :robust-end 7424 :post-blank 1 :post-affiliated 6988 :mode section :granularity element :cached t :parent #91# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #92# 0] [[nil nil #93# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 7486 :end 7635 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "       ;; warn when opening files bigger than 100MB\12       (setq large-file-warning-threshold 100000000)\12" :post-blank 1 :post-affiliated 7486 :mode planning :granularity element :cached t :parent #94=(section (:begin 7486 :end 7635 :contents-begin 7486 :contents-end 7634 :robust-begin 7486 :robust-end 7632 :post-blank 1 :post-affiliated 7486 :mode section :granularity element :cached t :parent #93# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #94# 0] #24# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 6891 :end 6969 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      (fset 'yes-or-no-p 'y-or-n-p)\12" :post-blank 1 :post-affiliated 6891 :mode planning :granularity element :cached t :parent #95# :org-element--cache-sync-key nil)) 0] #86# 0] #96# 0] [[[[[[[nil nil #99=(section (:begin 7671 :end 7935 :contents-begin 7671 :contents-end 7934 :robust-begin 7671 :robust-end 7932 :post-blank 1 :post-affiliated 7671 :mode section :granularity element :cached t :parent #97# :org-element--cache-sync-key nil)) 0] [nil nil #98# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 7671 :end 7935 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "       ;; config changes made through the customize UI will be stored here\12       (setq custom-file (expand-file-name \"custom.el\" user-emacs-directory))\12       (ignore-errors (load custom-file)) ;; It may not yet exist.\12" :post-blank 1 :post-affiliated 7671 :mode planning :granularity element :cached t :parent #99# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 7973 :end 8093 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "       ;; \"Don't show splash screen\"\12       (setq inhibit-startup-screen t)\12" :post-blank 1 :post-affiliated 7973 :mode planning :granularity element :cached t :parent #101=(section (:begin 7973 :end 8093 :contents-begin 7973 :contents-end 8092 :robust-begin 7973 :robust-end 8090 :post-blank 1 :post-affiliated 7973 :mode section :granularity element :cached t :parent #98# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #106=(section (:begin 8142 :end 9028 :contents-begin 8142 :contents-end 9027 :robust-begin 8142 :robust-end 9025 :post-blank 1 :post-affiliated 8142 :mode section :granularity element :cached t :parent #100# :org-element--cache-sync-key nil)) 0] #100# 0] #101# 0] [[[nil nil #102# 0] [nil nil (paragraph (:begin 9046 :end 9081 :contents-begin 9046 :contents-end 9080 :post-blank 1 :post-affiliated 9046 :mode planning :granularity element :cached t :parent #103=(section (:begin 9046 :end 9290 :contents-begin 9046 :contents-end 9289 :robust-begin 9046 :robust-end 9287 :post-blank 1 :post-affiliated 9046 :mode section :granularity element :cached t :parent #102# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #103# 0] [[nil nil #104# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 9307 :end 9726 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      ;; more useful frame title, that show either a file or a\12      ;; buffer name (if the buffer isn't visiting a file)\12      (setq frame-title-format\12            '(\"\" invocation-name \" Experimental - \" (:eval (if (buffer-file-name)\12                                                  (abbreviate-file-name (buffer-file-name))\12                                                \"%b\"))))\12" :post-blank 2 :post-affiliated 9307 :mode planning :granularity element :cached t :parent #105=(section (:begin 9307 :end 9726 :contents-begin 9307 :contents-end 9724 :robust-begin 9307 :robust-end 9722 :post-blank 2 :post-affiliated 9307 :mode section :granularity element :cached t :parent #104# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #105# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 9081 :end 9290 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      (require 'server)\12      (add-hook 'after-init-hook\12                (lambda ()\12                  (unless (server-running-p)\12                    (server-start))))\12" :post-blank 1 :post-affiliated 9081 :mode nil :granularity element :cached t :parent #103# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 8142 :end 9028 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;; Emacs modes typically provide a standard means to change the\12  ;; indentation width -- eg. c-basic-offset: use that to adjust your\12  ;; personal indentation width, while maintaining the style (and\12  ;; meaning) of any files you load.\12  (setq-default indent-tabs-mode nil)   ;; don't use tabs to indent\12  (setq-default tab-width 8)            ;; but maintain correct appearance\12\12  ;; Newline at end of file\12  (setq require-final-newline t)\12\12  ;; delete the selection with a keypress\12  (delete-selection-mode t)\12\12  ;; store all backup and autosave files in the tmp dir\12  (setq backup-directory-alist\12        `((\".*\" . ,temporary-file-directory)))\12  (setq auto-save-file-name-transforms\12        `((\".*\" ,temporary-file-directory t)))\12\12  ;; revert buffers automatically when underlying files are changed externally\12  (global-auto-revert-mode t)\12\12" :post-blank 1 :post-affiliated 8142 :mode planning :granularity element :cached t :parent #106# :org-element--cache-sync-key nil)) 0] [[[[nil nil #108=(section (:begin 9740 :end 10051 :contents-begin 9740 :contents-end 10050 :robust-begin 9740 :robust-end 10048 :post-blank 1 :post-affiliated 9740 :mode section :granularity element :cached t :parent #107# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 9841 :end 10051 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package which-key\12    :diminish\12    :defer 5\12    :config (which-key-mode)\12            (which-key-setup-side-window-bottom)\12            (setq which-key-idle-delay 0.05))\12" :post-blank 1 :post-affiliated 9841 :mode nil :granularity element :cached t :parent #108# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 9740 :end 9841 :contents-begin 9740 :contents-end 9840 :post-blank 1 :post-affiliated 9740 :mode planning :granularity element :cached t :parent #108# :org-element--cache-sync-key nil)) 0] [[nil nil #110=(section (:begin 10073 :end 10132 :contents-begin 10073 :contents-end 10131 :robust-begin 10073 :robust-end 10129 :post-blank 1 :post-affiliated 10073 :mode section :granularity element :cached t :parent #109# :org-element--cache-sync-key nil)) 0] [nil nil #33# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 10073 :end 10132 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      (tool-bar-mode -1)\12" :post-blank 1 :post-affiliated 10073 :mode planning :granularity element :cached t :parent #110# :org-element--cache-sync-key nil)) 0] #109# 0] [[[nil nil #112=(section (:begin 10166 :end 10611 :contents-begin 10166 :contents-end 10609 :robust-begin 10166 :robust-end 10607 :post-blank 2 :post-affiliated 10166 :mode section :granularity element :cached t :parent #111# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 10233 :end 10611 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;; (use-package ivy\12  ;;   :ensure t\11\11\11\11;make sure ivy is installed\12  ;;   :diminish\12  ;;   :init (ivy-mode 1)\11\11\11;globally at startup\12  ;;   :config\12  ;;   (setq ivy-use-virtual-buffers t)\12  ;;   (setq enable-recursive-minibuffers t)\12  ;;   (setq ivy-height 20)\12  ;;   (setq ivy-count-format \"%d/%d \")\12  ;;   :bind (\"C-c C-r\" . ivy-resume))\12" :post-blank 2 :post-affiliated 10233 :mode nil :granularity element :cached t :parent #112# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 10166 :end 10233 :contents-begin 10166 :contents-end 10233 :post-blank 0 :post-affiliated 10166 :mode planning :granularity element :cached t :parent #112# :org-element--cache-sync-key nil)) 0] [[nil nil #114=(section (:begin 10623 :end 10739 :contents-begin 10623 :contents-end 10738 :robust-begin 10623 :robust-end 10736 :post-blank 1 :post-affiliated 10623 :mode section :granularity element :cached t :parent #113# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 10643 :end 10739 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "(use-package swiper\12    :ensure t\12    :bind (\"C-s\" . swiper))\12" :post-blank 1 :post-affiliated 10643 :mode nil :granularity element :cached t :parent #114# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 10623 :end 10643 :contents-begin 10623 :contents-end 10643 :post-blank 0 :post-affiliated 10623 :mode planning :granularity element :cached t :parent #114# :org-element--cache-sync-key nil)) 0] #113# 0] #111# 0] #107# 0] [[[[[nil nil #117=(section (:begin 10752 :end 11535 :contents-begin 10752 :contents-end 11534 :robust-begin 10752 :robust-end 11532 :post-blank 1 :post-affiliated 10752 :mode section :granularity element :cached t :parent #115# :org-element--cache-sync-key nil)) 0] [nil nil #116# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 10752 :end 11535 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;; (use-package counsel\12  ;;   :ensure t\12  ;;   :bind*\11\11\11\11;load when pressed\12  ;;   (\12  ;;    (\"M-x\"     . counsel-M-x)\12  ;;    (\"C-x C-f\" . counsel-find-file)\12  ;;    (\"C-x C-r\" . counsel-recentf)  ; search for recently edited\12  ;;    (\"C-c g\"   . counsel-git)      ; search for files in git repo\12  ;;    (\"C-c j\"   . counsel-git-grep) ; search for regexp in git repo\12  ;;    (\"C-c /\"   . counsel-ag)       ; Use ag for regexp\12  ;;    (\"C-x l\"   . counsel-locate)\12  ;;    (\"C-x C-f\" . counsel-find-file)\12  ;;    (\"<f1> f\"  . counsel-describe-function)\12  ;;    (\"<f1> v\"  . counsel-describe-variable)\12  ;;    (\"<f1> l\"  . counsel-find-library)\12  ;;    (\"<f2> i\"  . counsel-info-lookup-symbol)\12  ;;    (\"<f2> u\"  . counsel-unicode-char)\12  ;;    ))\12" :post-blank 1 :post-affiliated 10752 :mode planning :granularity element :cached t :parent #117# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 11544 :end 11764 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (global-set-key (kbd \"M-x\") 'smex)\12  (global-set-key (kbd \"M-X\") 'smex-major-mode-commands)\12  ;; This is your old M-x.\12  (global-set-key (kbd \"C-c C-c M-x\") 'execute-extended-command)\12" :post-blank 1 :post-affiliated 11544 :mode planning :granularity element :cached t :parent #119=(section (:begin 11544 :end 11764 :contents-begin 11544 :contents-end 11763 :robust-begin 11544 :robust-end 11761 :post-blank 1 :post-affiliated 11544 :mode section :granularity element :cached t :parent #116# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #120=(section (:begin 11797 :end 12768 :contents-begin 11797 :contents-end 12767 :robust-begin 11797 :robust-end 12765 :post-blank 1 :post-affiliated 11797 :mode section :granularity element :cached t :parent #118# :org-element--cache-sync-key nil)) 0] #118# 0] #119# 0] [[[nil nil (paragraph (:begin 12341 :end 12366 :contents-begin 12341 :contents-end 12366 :post-blank 0 :post-affiliated 12341 :mode nil :granularity element :cached t :parent #120# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 12476 :end 12768 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package smex\12    :ensure t\12    :config\12    (setq smex-save-file (expand-file-name \".smex-items\" experimental-savefile-dir))\12    (smex-initialize)\12    (global-set-key (kbd \"M-x\") 'smex)\12    (global-set-key (kbd \"M-X\") 'smex-major-mode-commands)\12\12    )\12" :post-blank 1 :post-affiliated 12476 :mode nil :granularity element :cached t :parent #120# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 12366 :end 12476 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package flx-ido\12    :ensure t\12    :config\12    (flx-ido-mode +1)\12   )\12" :post-blank 1 :post-affiliated 12366 :mode nil :granularity element :cached t :parent #120# :org-element--cache-sync-key nil)) 0] [[nil nil #122=(section (:begin 12780 :end 13325 :contents-begin 12780 :contents-end 13324 :robust-begin 12780 :robust-end 13322 :post-blank 1 :post-affiliated 12780 :mode section :granularity element :cached t :parent #121# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 12793 :end 13325 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package company\12    :ensure t\12    :config\12    (setq company-idle-delay 0.5)\12    (setq company-show-numbers t)\12    (setq company-tooltip-limit 10)\12    (setq company-minimum-prefix-length 2)\12    (setq company-tooltip-align-annotations t)\12    ;; invert the navigation direction if the the completion popup-isearch-match\12    ;; is displayed on top (happens near the bottom of windows)\12    (setq company-tooltip-flip-when-above t)\12\12    (global-company-mode 1)\12    (diminish 'company-mode)\12\12    )\12" :post-blank 1 :post-affiliated 12793 :mode nil :granularity element :cached t :parent #122# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 12780 :end 12793 :contents-begin 12780 :contents-end 12792 :post-blank 1 :post-affiliated 12780 :mode planning :granularity element :cached t :parent #122# :org-element--cache-sync-key nil)) 0] #121# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 11797 :end 12341 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package ido\12    :ensure t\12    :config\12    (setq ido-enable-prefix nil\12          ido-enable-flex-matching t\12          ido-create-new-buffer 'always\12          ido-use-filename-at-point 'guess\12          ido-max-prospects 10\12          ido-save-directory-list-file (expand-file-name \"ido.hist\" experimental-savefile-dir)\12          ido-default-file-method 'selected-window\12          ido-auto-merge-work-directories-length -1)\12    (ido-mode +1)\12    (ido-ubiquitous-mode +1)\12    (setq ido-use-faces nil)\12\12    )\12" :post-blank 1 :post-affiliated 11797 :mode planning :granularity element :cached t :parent #120# :org-element--cache-sync-key nil)) 0] [[[[nil nil #125=(section (:begin 13338 :end 14328 :contents-begin 13338 :contents-end 14327 :robust-begin 13338 :robust-end 14325 :post-blank 1 :post-affiliated 13338 :mode section :granularity element :cached t :parent #123# :org-element--cache-sync-key nil)) 0] [nil nil #124# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 13338 :end 14328 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;; (use-package origami\12  ;;   :ensure t\12  ;;   :bind ((\"C-c o C\" . origami-close-all-nodes)\12  ;;          (\"C-c o c\" . origami-close-node)\12  ;;          (\"C-c o x\" . origami-close-node-recursively)\12\12  ;;          (\"C-c o f\" . origami-forward-fold)\12  ;;          (\"C-c o F\" . origami-forward-fold-same-level)\12  ;;          (\"C-c o g\" . origami-forward-toggle-node)\12\12  ;;          (\"C-c o n\" . origami-next-fold)\12\12  ;;          (\"C-c o J\" .   origami-open-all-nodes)\12  ;;          (\"C-c o j\" .   origami-open-node)\12  ;;          (\"C-c o m\" .   origami-open-node-recursively)\12\12  ;;          (\"C-c o p\" . origami-previous-fold)\12\12  ;;          (\"C-c o r\" . origami-redo)\12  ;;          (\"C-c o R\" . origami-reset)\12\12  ;;          (\"C-c o s\" . origami-show-node)\12  ;;          (\"C-c o S\" . origami-show-only-node)\12\12  ;;          (\"C-c o T\" . origami-toggle-all-nodes)\12  ;;          (\"C-c o t\" . origami-toggle-node)\12  ;;          (\"C-c o u\" .   origami-undo)))\12" :post-blank 1 :post-affiliated 13338 :mode planning :granularity element :cached t :parent #125# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 14363 :end 14810 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      (defun double-flash-mode-line ()\12        (let ((flash-sec (/ 1.0 20)))\12          (invert-face 'mode-line)\12          (run-with-timer flash-sec nil #'invert-face 'mode-line)\12          (run-with-timer (* 2 flash-sec) nil #'invert-face 'mode-line)\12          (run-with-timer (* 3 flash-sec) nil #'invert-face 'mode-line)))\12\12      (add-hook 'overwrite-mode-hook #'(lambda () (double-flash-mode-line)))\12" :post-blank 4 :post-affiliated 14363 :mode planning :granularity element :cached t :parent #126=(section (:begin 14363 :end 14810 :contents-begin 14363 :contents-end 14806 :robust-begin 14363 :robust-end 14804 :post-blank 4 :post-affiliated 14363 :mode section :granularity element :cached t :parent #124# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil (section (:begin 14838 :end 14918 :contents-begin 14838 :contents-end 14917 :robust-begin 14838 :robust-end 14915 :post-blank 1 :post-affiliated 14838 :mode section :granularity element :cached t :parent #45# :org-element--cache-sync-key nil)) 0] #45# 0] #126# 0] [[[nil nil #128=(section (:begin 14932 :end 15869 :contents-begin 14932 :contents-end 15868 :robust-begin 14932 :robust-end 15866 :post-blank 1 :post-affiliated 14932 :mode section :granularity element :cached t :parent #127# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 14976 :end 15869 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;; ;; Org-Roam basic configuration\12  ;; (setq org-directory (concat (getenv \"HOME\") \"/Documents/org-roam/\"))\12\12  ;; (use-package org-roam\12  ;;   :ensure t\12  ;;   :after org\12  ;;   :init (setq org-roam-v2-ack t) ;; Acknowledge V2 upgrade\12  ;;   :custom\12  ;;   (org-roam-directory (file-truename org-directory))\12  ;;   :config\12  ;;   (org-roam-db-autosync-enable)\12  ;;   (setq org-roam-completion-everywhere t)\12  ;;   :bind ((\"C-c n f\" . org-roam-node-find)\12  ;;          (\"C-c n g\" . org-roam-graph)\12  ;;          (\"C-c n r\" . org-roam-node-random)\12  ;;          (:map org-mode-map\12  ;;                ((\"C-c n i\" . org-roam-node-insert)\12  ;;                 (\"C-c n o\" . org-id-get-create)\12  ;;                 (\"C-c n t\" . org-roam-tag-add)\12  ;;                 (\"C-c n a\" . org-roam-alias-add)\12  ;;                 (\"C-c n l\" . org-roam-buffer-toggle)))))\12" :post-blank 1 :post-affiliated 14976 :mode nil :granularity element :cached t :parent #128# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 14932 :end 14976 :contents-begin 14932 :contents-end 14976 :post-blank 0 :post-affiliated 14932 :mode planning :granularity element :cached t :parent #128# :org-element--cache-sync-key nil)) 0] [[nil nil #131=(section (:begin 15898 :end 16402 :contents-begin 15898 :contents-end 16399 :robust-begin 15898 :robust-end 16397 :post-blank 3 :post-affiliated 15898 :mode section :granularity element :cached t :parent #129# :org-element--cache-sync-key nil)) 0] [nil nil #130# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 15898 :end 16402 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "       (require 'org)\12       (org-link-set-parameters \"pdf\" 'org-pdf-open nil)\12\12       (defun org-pdf-open (link)\12         \"Where page number is 105, the link should look like:\12          [[pdf:/path/to/file.pdf#105][My description.]]\"\12         (let* ((path+page (split-string link \"#\"))\12                (pdf-file (car path+page))\12                (page (car (cdr path+page))))\12           (start-process \"view-pdf\" nil \"evince\" \"--page-index\" page pdf-file)))\12" :post-blank 3 :post-affiliated 15898 :mode planning :granularity element :cached t :parent #131# :org-element--cache-sync-key nil)) 0] #129# 0] #127# 0] #123# 0] #115# 0] [[[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 16431 :end 17451 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value " (defun my-file-line-link ()\12   \"Copy the buffer full path and line number into a clipboard\12                  for pasting into *.org file.\"\12   (interactive)\12   (let* ((home-part (concat \"/home/\"\12                             (user-login-name)))\12          (the-link\12           (let ((file-link\12                  (concat \"file:\"\12                          (let ((bfn buffer-file-name))\12                            (if (string-prefix-p home-part bfn)\12                                (concat \"~\"\12                                        (substring bfn (length home-part)))\12                              bfn))\12                          \"::\"\12                          (substring  (what-line) 5))))\12             (if (string-match \" \" file-link)\12                 (concat \"[[\" file-link \"]]\")\12               file-link))))\12     (kill-new\12      (message the-link))))\12\12        ;; we had to cheat to have s-\\ as a shortcut\12 (global-set-key (kbd (format \"%s-%c\" \"s\" 92)) 'my-file-line-link)\12" :post-blank 1 :post-affiliated 16431 :mode planning :granularity element :cached t :parent #154=(section (:begin 16431 :end 17451 :contents-begin 16431 :contents-end 17450 :robust-begin 16431 :robust-end 17448 :post-blank 1 :post-affiliated 16431 :mode section :granularity element :cached t :parent #130# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #133=(section (:begin 17463 :end 17614 :contents-begin 17463 :contents-end 17613 :robust-begin 17463 :robust-end 17611 :post-blank 1 :post-affiliated 17463 :mode section :granularity element :cached t :parent #132# :org-element--cache-sync-key nil)) 0] #132# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 17481 :end 17614 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "      ;; (use-package idris2-mode\12      ;;   :load-path \"vendor/idris2-mode\"\12\12      ;;   )\12" :post-blank 1 :post-affiliated 17481 :mode nil :granularity element :cached t :parent #133# :org-element--cache-sync-key nil)) 0] [nil nil #137=(section (:begin 17622 :end 17827 :contents-begin 17622 :contents-end 17827 :robust-begin 17622 :robust-end 17825 :post-blank 0 :post-affiliated 17622 :mode section :granularity element :cached t :parent #134# :org-element--cache-sync-key nil)) 0] #134# 0] (paragraph (:begin 17463 :end 17481 :contents-begin 17463 :contents-end 17481 :post-blank 0 :post-affiliated 17463 :mode planning :granularity element :cached t :parent #133# :org-element--cache-sync-key nil)) 0] [[[nil nil #51# 0] [nil nil #52# 0] (section (:begin 17836 :end 17907 :contents-begin 17836 :contents-end 17907 :robust-begin 17836 :robust-end 17905 :post-blank 0 :post-affiliated 17836 :mode section :granularity element :cached t :parent #51# :org-element--cache-sync-key nil)) 0] [[nil nil #135# 0] [nil nil (paragraph (:begin 17982 :end 18013 :contents-begin 17982 :contents-end 18012 :post-blank 1 :post-affiliated 17982 :mode planning :granularity element :cached t :parent #136=(section (:begin 17982 :end 18164 :contents-begin 17982 :contents-end 18163 :robust-begin 17982 :robust-end 18161 :post-blank 1 :post-affiliated 17982 :mode section :granularity element :cached t :parent #135# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #136# 0] (section (:begin 17923 :end 17964 :contents-begin 17923 :contents-end 17963 :robust-begin 17923 :robust-end 17961 :post-blank 1 :post-affiliated 17923 :mode section :granularity element :cached t :parent #52# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 17622 :end 17827 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (add-hook 'elm-mode-hook 'elm-format-on-save-mode)\12  (add-hook 'elm-mode-hook\12            #'(lambda ()\12                (local-set-key (kbd \"C-]\") 'insert-graph-arrow)))\12\12" :post-blank 0 :post-affiliated 17622 :mode planning :granularity element :cached t :parent #137# :org-element--cache-sync-key nil)) 0] [[[[[nil nil #138# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 18177 :end 18558 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "    (add-to-list 'auto-mode-alist '(\"\\\\.edn\\\\'\" . clojure-mode))\12\12    (add-hook 'cider-repl-mode-hook\12              #'(lambda ()\12                 (local-set-key (kbd \"C-c M-k\") 'cider-repl-clear-buffer)))\12\12    (add-hook 'cider-repl-mode-hook\12              #'(lambda ()\12                 (local-set-key (kbd \"C-c M-a\") 'cider-load-all-files)))\12" :post-blank 2 :post-affiliated 18177 :mode planning :granularity element :cached t :parent #139=(section (:begin 18177 :end 18558 :contents-begin 18177 :contents-end 18556 :robust-begin 18177 :robust-end 18554 :post-blank 2 :post-affiliated 18177 :mode section :granularity element :cached t :parent #138# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #139# 0] [[nil nil #141=(section (:begin 18567 :end 18736 :contents-begin 18567 :contents-end 18735 :robust-begin 18567 :robust-end 18733 :post-blank 1 :post-affiliated 18567 :mode section :granularity element :cached t :parent #140# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 18614 :end 18701 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (setq inferior-lisp-program \"/usr/local/bin/sbcl\")\12" :post-blank 1 :post-affiliated 18614 :mode nil :granularity element :cached t :parent #141# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 18567 :end 18614 :contents-begin 18567 :contents-end 18613 :post-blank 1 :post-affiliated 18567 :mode planning :granularity element :cached t :parent #141# :org-element--cache-sync-key nil)) 0] #140# 0] [[[nil nil #142# 0] [nil nil (paragraph (:begin 18747 :end 18840 :contents-begin 18747 :contents-end 18839 :post-blank 1 :post-affiliated 18747 :mode planning :granularity element :cached t :parent #143=(section (:begin 18747 :end 21251 :contents-begin 18747 :contents-end 21250 :robust-begin 18747 :robust-end 21248 :post-blank 1 :post-affiliated 18747 :mode section :granularity element :cached t :parent #142# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #143# 0] [[nil nil #144# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 21264 :end 22399 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "   (add-hook 'minibuffer-inactive-mode-hook #'paredit-mode)\12   (add-hook 'minibuffer-inactive-mode-hook #'rainbow-delimiters-mode)\12\12   (defun swap-paredit ()\12     \"Replace smartparens with superior paredit.\"\12     (smartparens-mode -1)\12     (paredit-mode +1))\12\12   (autoload 'paredit-mode \"paredit\"\12     \"Minor mode for pseudo-structurally editing Lisp code.\" t)\12   (add-hook 'emacs-lisp-mode-hook (lambda () (swap-paredit)))\12\12   (add-hook 'lisp-mode-hook (lambda () (swap-paredit)))\12   (add-hook 'lisp-interaction-mode-hook (lambda () (swap-paredit)))\12\12   (add-hook 'scheme-mode-hook (lambda () (swap-paredit)))\12   (add-hook 'geiser-repl-mode-hook (lambda () (swap-paredit)))\12   (add-hook 'geiser-repl-mode-hook 'rainbow-delimiters-mode)\12\12   (add-hook 'ielm-mode-hook (lambda () (swap-paredit)))\12   (add-hook 'ielm-mode-hook 'rainbow-delimiters-mode)\12\12   (add-hook 'slime-repl-mode-hook (lambda () (swap-paredit)))\12   (add-hook 'slime-repl-mode-hook 'rainbow-delimiters-mode)\12\12   (add-hook 'clojure-mode-hook (lambda () (swap-paredit)))\12   (add-hook 'cider-repl-mode-hook (lambda () (swap-paredit)))\12" :post-blank 1 :post-affiliated 21264 :mode planning :granularity element :cached t :parent #145=(section (:begin 21264 :end 22399 :contents-begin 21264 :contents-end 22398 :robust-begin 21264 :robust-end 22396 :post-blank 1 :post-affiliated 21264 :mode section :granularity element :cached t :parent #144# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #145# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 18840 :end 21251 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "   ;; (when nil\12   ;; ;;; this code has been responsible for slime version problem\12   ;;   (defvar slime-helper-el \"~/quicklisp/slime-helper.el\")\12   ;;   (when (file-exists-p slime-helper-el)\12   ;;     (load (expand-file-name slime-helper-el)))\12\12   ;;   (require 'slime)\12   ;;   (require 'slime-repl)\12   ;;   (require 'slime-autoloads)\12\12   ;;   (setq slime-contribs '(slime-fancy slime-fancy-inspector))\12\12   ;; ;;; switch depending on OS\12   ;;   (setq inferior-lisp-program (if (equal system-type 'windows-nt)\12   ;;                                   \"sbcl.exe\"\12   ;;                                 \"sbcl\"))\12\12   ;;   (defun slime-contrib-directory ()\12   ;;     (let* ((slime-folder-prefix \"slime-20\")\12   ;;            (folder-length (length slime-folder-prefix))\12   ;;            (slime-folder (car (seq-filter (lambda(x) (and (>= (length x)\12   ;;                                                               folder-length)\12   ;;                                                           (equal slime-folder-prefix\12   ;;                                                                  (seq-subseq x 0 folder-length))) )\12   ;;                                           (directory-files \"~/.emacs.d/elpa\")))))\12   ;;       (concat \"~/.emacs.d/elpa/\" slime-folder \"/contrib/\")))\12\12\12\12   ;; ;;; copy last s-expression to repl\12   ;; ;;; useful for expressions like (in-package #:whatever)\12   ;; ;;; alternatively you can use C-c ~ with cursor after (in-package :some-package)\12   ;; ;;; https://www.reddit.com/r/lisp/comments/ehs12v/copying_last_expression_to_repl_in_emacsslime/\12\12   ;;   (defun slime-copy-last-expression-to-repl (string)\12   ;;     (interactive (list (slime-last-expression)))\12   ;;     (slime-switch-to-output-buffer)\12   ;;     (goto-char (point-max))\12   ;;     (insert string))\12\12   ;;   (global-set-key (kbd \"C-c C-3\") 'slime-copy-last-expression-to-repl)\12\12   ;;   (eval-after-load \"slime\"\12   ;;     '(progn\12   ;;        (setq slime-complete-symbol-function 'slime-fuzzy-complete-symbol\12   ;;              slime-fuzzy-completion-in-place t\12   ;;              slime-enable-evaluate-in-emacs t\12   ;;              slime-autodoc-use-multiline-p t\12   ;;              tab-always-indent 'complete)\12\12\12   ;;        (define-key slime-mode-map (kbd \"C-c i\") 'slime-inspect)\12   ;;        (define-key slime-mode-map (kbd \"C-c C-s\") 'slime-selector)\12   ;;        ))\12   ;;   )\12" :post-blank 1 :post-affiliated 18840 :mode nil :granularity element :cached t :parent #143# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 18701 :end 18736 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12" :post-blank 1 :post-affiliated 18701 :mode nil :granularity element :cached t :parent #141# :org-element--cache-sync-key nil)) 0] [[[nil nil #148=(section (:begin 22413 :end 22869 :contents-begin 22413 :contents-end 22868 :robust-begin 22413 :robust-end 22866 :post-blank 1 :post-affiliated 22413 :mode section :granularity element :cached t :parent #146# :org-element--cache-sync-key nil)) 0] [nil nil #147# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 22413 :end 22869 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "   ;(require 'slime)\12   ;; (setq common-lisp-hyperspec-root\12   ;;       (format\12   ;;        \"file:/home/%s/Documents/Manuals/Lisp/HyperSpec-7-0/HyperSpec/\"\12   ;;        user-login-name))\12\12     (defun unfold-lisp ()\12       \"Unfold lisp code.\"\12       (interactive)\12       (search-forward \")\")\12       (backward-char)\12       (search-forward \" \")\12       (newline-and-indent))\12\12     (global-set-key (kbd \"s-0\") 'unfold-lisp)\12" :post-blank 1 :post-affiliated 22413 :mode planning :granularity element :cached t :parent #148# :org-element--cache-sync-key nil)) 0] [[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 22895 :end 27175 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "   ;;; this add capability to define your own hook for responding to theme changes\12   (defvar after-load-theme-hook nil\12     \"Hook run after a color theme is loaded using `load-theme'.\")\12\12   (defadvice load-theme (after run-after-load-theme-hook activate)\12     \"Run `after-load-theme-hook'.\"\12     (run-hooks 'after-load-theme-hook))\12\12   (require 'color)\12   (defun hsl-to-hex (h s l)\12     \"Convert H S L to hex colours.\"\12     (let (rgb)\12       (setq rgb (color-hsl-to-rgb h s l))\12       (color-rgb-to-hex (nth 0 rgb)\12                         (nth 1 rgb)\12                         (nth 2 rgb))))\12\12   (defun hex-to-rgb (hex)\12     \"Convert a 6 digit HEX color to r g b.\"\12     (mapcar #'(lambda (s) (/ (string-to-number s 16) 255.0))\12             (list (substring hex 1 3)\12                   (substring hex 3 5)\12                   (substring hex 5 7))))\12\12   (defun bg-color ()\12     \"Return COLOR or it's hexvalue.\"\12     (let ((color (face-attribute 'default :background)))\12       (if (equal (substring color 0 1) \"#\")\12           color\12         (apply 'color-rgb-to-hex (color-name-to-rgb color)))))\12\12   (defun bg-light ()\12     \"Calculate background brightness.\"\12     (< (color-distance  \"white\"\12                         (bg-color))\12        (color-distance  \"black\"\12                         (bg-color))))\12\12   (defun whitespace-line-bg ()\12     \"Calculate long line highlight depending on background brightness.\"\12     (apply 'color-rgb-to-hex\12            (apply 'color-hsl-to-rgb\12                   (apply (if (bg-light) 'color-darken-hsl 'color-lighten-hsl)\12                          (append\12                           (apply 'color-rgb-to-hsl\12                                  (hex-to-rgb\12                                   (bg-color)))\12                           '(7))))))\12\12   (defun bracket-colors ()\12     \"Calculate the bracket colours based on background.\"\12     (let (hexcolors lightvals)\12       (setq lightvals (if (bg-light)\12                           (list (list .60 1.0 0.55) ; H S L\12                                 (list .30 1.0 0.40)\12                                 (list .11 1.0 0.55)\12                                 (list .01 1.0 0.65)\12                                 (list .75 0.9 0.55) ; H S L\12                                 (list .49 0.9 0.40)\12                                 (list .17 0.9 0.47)\12                                 (list .05 0.9 0.55))\12                         (list (list .70 1.0 0.68) ; H S L\12                               (list .30 1.0 0.40)\12                               (list .11 1.0 0.50)\12                               (list .01 1.0 0.50)\12                               (list .81 0.9 0.55) ; H S L\12                               (list .49 0.9 0.40)\12                               (list .17 0.9 0.45)\12                               (list .05 0.9 0.45))))\12       (dolist (n lightvals)\12         (push (apply 'hsl-to-hex n) hexcolors))\12       (reverse hexcolors)))\12\12\12   (defun colorise-brackets ()\12     \"Apply my own colours to rainbow delimiters.\"\12     (interactive)\12     (require 'rainbow-delimiters)\12     (custom-set-faces\12      ;; change the background but do not let theme to interfere with the foreground\12      `(whitespace-line ((t (:background ,(whitespace-line-bg)))))\12      ;; or use (list-colors-display)\12      `(rainbow-delimiters-depth-2-face ((t (:foreground ,(nth 0 (bracket-colors))))))\12      `(rainbow-delimiters-depth-3-face ((t (:foreground ,(nth 1 (bracket-colors))))))\12      `(rainbow-delimiters-depth-4-face ((t (:foreground ,(nth 2 (bracket-colors))))))\12      `(rainbow-delimiters-depth-5-face ((t (:foreground ,(nth 3 (bracket-colors))))))\12      `(rainbow-delimiters-depth-6-face ((t (:foreground ,(nth 4 (bracket-colors))))))\12      `(rainbow-delimiters-depth-7-face ((t (:foreground ,(nth 5 (bracket-colors))))))\12      `(rainbow-delimiters-depth-8-face ((t (:foreground ,(nth 6 (bracket-colors))))))\12      `(rainbow-delimiters-depth-9-face ((t (:foreground ,(nth 7 (bracket-colors))))))\12      `(rainbow-delimiters-unmatched-face ((t (:foreground \"white\" :background \"red\"))))\12      `(highlight ((t (:foreground \"#ff0000\" :background \"#888\"))))))\12\12   (colorise-brackets)\12\12   (add-hook 'prog-mode-hook 'rainbow-delimiters-mode)\12   (add-hook 'after-load-theme-hook 'colorise-brackets)\12\12\12" :post-blank 2 :post-affiliated 22895 :mode planning :granularity element :cached t :parent #153=(section (:begin 22895 :end 27175 :contents-begin 22895 :contents-end 27173 :robust-begin 22895 :robust-end 27171 :post-blank 2 :post-affiliated 22895 :mode section :granularity element :cached t :parent #147# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #152=(section (:begin 27194 :end 27350 :contents-begin 27194 :contents-end 27349 :robust-begin 27194 :robust-end 27347 :post-blank 1 :post-affiliated 27194 :mode section :granularity element :cached t :parent #149# :org-element--cache-sync-key nil)) 0] #149# 0] [[nil nil #150# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 27361 :end 27545 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "     ;; put frequency of garbage collection back to normal\12     (setq gc-cons-threshold  800000)\12\12     (message \"\\nthe end of literal config\\n\")\12" :post-blank 0 :post-affiliated 27361 :mode planning :granularity element :cached t :parent #151=(section (:begin 27361 :end 27545 :contents-begin 27361 :contents-end 27545 :robust-begin 27361 :robust-end 27543 :post-blank 0 :post-affiliated 27361 :mode section :granularity element :cached t :parent #150# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #151# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 27194 :end 27350 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "     (message \"M-x describe-personal-keybindings will show keybindings defined in use-package user configuration.\")\12" :post-blank 1 :post-affiliated 27194 :mode planning :granularity element :cached t :parent #152# :org-element--cache-sync-key nil)) 0] #153# 1] #146# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 18013 :end 18164 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (use-package jacek-verse\12    :commands jacek-verse\12    :load-path \"modules/\"\12    :bind (\"<f5>\" . verse-link)\12    )\12" :post-blank 1 :post-affiliated 18013 :mode nil :granularity element :cached t :parent #136# :org-element--cache-sync-key nil)) 1] #154# 0] #97# 1] nil nil 0] org-element--cache-compare)))